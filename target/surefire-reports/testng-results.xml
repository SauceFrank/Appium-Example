<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="8" passed="7">
  <reporter-output>
  </reporter-output>
  <suite name="Command line suite" duration-ms="294785" started-at="2020-12-30T13:54:26Z" finished-at="2020-12-30T13:59:20Z">
    <groups>
    </groups>
    <test name="Command line test" duration-ms="294785" started-at="2020-12-30T13:54:26Z" finished-at="2020-12-30T13:59:20Z">
      <class name="example.ios.Tests.FollowLinkTest">
        <test-method status="PASS" signature="verifyLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:example.ios.Tests.FollowLinkTest@57baeedf]" name="verifyLinkTest" duration-ms="69962" started-at="2020-12-30T08:58:04Z" data-provider="hardCodedBrowsers" finished-at="2020-12-30T08:59:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone X Simulator]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12.2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.13.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[portrait]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[public void example.ios.Tests.FollowLinkTest.verifyLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinkTest -->
        <test-method status="FAIL" signature="verifyLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:example.ios.Tests.FollowLinkTest@57baeedf]" name="verifyLinkTest" duration-ms="71742" started-at="2020-12-30T08:58:04Z" data-provider="hardCodedBrowsers" finished-at="2020-12-30T08:59:16Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPad Pro (12.9 inch) Simulator]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12.2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.13.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[portrait]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[public void example.ios.Tests.FollowLinkTest.verifyLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [false] but found [true]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [false] but found [true]
	at org.testng.Assert.fail(Assert.java:94)
	at org.testng.Assert.failNotEquals(Assert.java:513)
	at org.testng.Assert.assertFalse(Assert.java:63)
	at org.testng.Assert.assertFalse(Assert.java:73)
	at example.ios.Tests.FollowLinkTest.verifyLinkTest(FollowLinkTest.java:41)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:104)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:645)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:851)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:75)
	at org.testng.internal.TestMethodWithDataProviderMethodWorker.call(TestMethodWithDataProviderMethodWorker.java:14)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)
	at java.lang.Thread.run(Thread.java:748)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinkTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:example.ios.Tests.FollowLinkTest@57baeedf]" name="tearDown" is-config="true" duration-ms="1453" started-at="2020-12-30T08:59:14Z" finished-at="2020-12-30T08:59:16Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:example.ios.Tests.FollowLinkTest@57baeedf]" name="tearDown" is-config="true" duration-ms="4599" started-at="2020-12-30T08:59:16Z" finished-at="2020-12-30T08:59:20Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- example.ios.Tests.FollowLinkTest -->
      <class name="example.android.Tests.TextInputTest">
        <test-method status="PASS" signature="verifyCommentInputTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:example.android.Tests.TextInputTest@343f4d3d]" name="verifyCommentInputTest" duration-ms="47383" started-at="2020-12-30T08:54:26Z" data-provider="hardCodedBrowsers" finished-at="2020-12-30T08:55:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Samsung Galaxy Tab S3 GoogleAPI Emulator]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.9.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[portrait]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[public void example.android.Tests.TextInputTest.verifyCommentInputTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCommentInputTest -->
        <test-method status="PASS" signature="verifyCommentInputTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:example.android.Tests.TextInputTest@343f4d3d]" name="verifyCommentInputTest" duration-ms="48789" started-at="2020-12-30T08:54:26Z" data-provider="hardCodedBrowsers" finished-at="2020-12-30T08:55:14Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Samsung Galaxy S9 Plus FHD GoogleAPI Emulator]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.9.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[portrait]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[public void example.android.Tests.TextInputTest.verifyCommentInputTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCommentInputTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:example.android.Tests.TextInputTest@343f4d3d]" name="tearDown" is-config="true" duration-ms="469" started-at="2020-12-30T08:55:14Z" finished-at="2020-12-30T08:55:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:example.android.Tests.TextInputTest@343f4d3d]" name="tearDown" is-config="true" duration-ms="395" started-at="2020-12-30T08:55:15Z" finished-at="2020-12-30T08:55:15Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- example.android.Tests.TextInputTest -->
      <class name="example.ios.Tests.TextInputTest">
        <test-method status="PASS" signature="verifyCommentInputTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:example.ios.Tests.TextInputTest@42e26948]" name="verifyCommentInputTest" duration-ms="75575" started-at="2020-12-30T08:55:15Z" data-provider="hardCodedBrowsers" finished-at="2020-12-30T08:56:31Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPhone X Simulator]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12.2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.13.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[portrait]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[public void example.ios.Tests.TextInputTest.verifyCommentInputTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCommentInputTest -->
        <test-method status="PASS" signature="verifyCommentInputTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:example.ios.Tests.TextInputTest@42e26948]" name="verifyCommentInputTest" duration-ms="117859" started-at="2020-12-30T08:55:15Z" data-provider="hardCodedBrowsers" finished-at="2020-12-30T08:57:13Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[iOS]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[iPad Pro (12.9 inch) Simulator]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[12.2]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.13.0]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[portrait]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[public void example.ios.Tests.TextInputTest.verifyCommentInputTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyCommentInputTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:example.ios.Tests.TextInputTest@42e26948]" name="tearDown" is-config="true" duration-ms="714" started-at="2020-12-30T08:56:31Z" finished-at="2020-12-30T08:56:32Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:example.ios.Tests.TextInputTest@42e26948]" name="tearDown" is-config="true" duration-ms="1135" started-at="2020-12-30T08:57:13Z" finished-at="2020-12-30T08:57:14Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- example.ios.Tests.TextInputTest -->
      <class name="example.android.Tests.FollowLinkTest">
        <test-method status="PASS" signature="verifyLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:example.android.Tests.FollowLinkTest@53b32d7]" name="verifyLinkTest" duration-ms="47547" started-at="2020-12-30T08:57:14Z" data-provider="hardCodedBrowsers" finished-at="2020-12-30T08:58:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Samsung Galaxy Tab S3 GoogleAPI Emulator]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.9.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[portrait]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[public void example.android.Tests.FollowLinkTest.verifyLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinkTest -->
        <test-method status="PASS" signature="verifyLinkTest(java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.String, java.lang.reflect.Method)[pri:0, instance:example.android.Tests.FollowLinkTest@53b32d7]" name="verifyLinkTest" duration-ms="39524" started-at="2020-12-30T08:57:14Z" data-provider="hardCodedBrowsers" finished-at="2020-12-30T08:57:54Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[Android]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[Samsung Galaxy S9 Plus FHD GoogleAPI Emulator]]>
              </value>
            </param>
            <param index="2">
              <value>
                <![CDATA[8.1]]>
              </value>
            </param>
            <param index="3">
              <value>
                <![CDATA[1.9.1]]>
              </value>
            </param>
            <param index="4">
              <value>
                <![CDATA[portrait]]>
              </value>
            </param>
            <param index="5">
              <value>
                <![CDATA[public void example.android.Tests.FollowLinkTest.verifyLinkTest(java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.String,java.lang.reflect.Method) throws java.net.MalformedURLException,org.openqa.selenium.InvalidElementStateException,java.rmi.UnexpectedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- verifyLinkTest -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:example.android.Tests.FollowLinkTest@53b32d7]" name="tearDown" is-config="true" duration-ms="690" started-at="2020-12-30T08:57:54Z" finished-at="2020-12-30T08:57:55Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
        <test-method status="PASS" signature="tearDown()[pri:0, instance:example.android.Tests.FollowLinkTest@53b32d7]" name="tearDown" is-config="true" duration-ms="1494" started-at="2020-12-30T08:58:02Z" finished-at="2020-12-30T08:58:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDown -->
      </class> <!-- example.android.Tests.FollowLinkTest -->
    </test> <!-- Command line test -->
  </suite> <!-- Command line suite -->
</testng-results>
